name: CaTO DevSecOps Pipeline

on: [push, pull_request]

jobs:
  security-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Build Docker image
      run: docker build -t secure-app:latest .

    - name: Create sbom folder
      run: mkdir -p sbom


    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin


    

    - name: Generate SBOM
      run: |
        syft secure-app:latest -o json > sbom/syft.json

    - name: Install Grype
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

    - name: CVE Scan
      run: |
        grype secure-app:latest --only-fixed -o table || true

    - name: Install OPA
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64_static
        chmod +x opa
        sudo mv opa /usr/local/bin

    - name: Run OPA policy check
      run: |
       opa eval --input sbom/syft.json --data policies/ --format pretty "data.main.deny"

    - name: Create reports folder
      run: mkdir -p reports


    - name: Generate Compliance report
      run: |
        echo "## Compliance Report" > reports/report.md
        echo "✅ SBOM generated with Syft" >> reports/report.md
        echo "✅ CVE scan completed with Grype" >> reports/report.md
        echo "✅ Policy evaluated with OPA" >> reports/report.md
    
    - name: Upload Compliance Report
      uses: actions/upload-artifact@v4
      with:
        name: compliance-report
        path: reports/report.md

    - name: Commit and push report to repo
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git pull origin ${{ github.ref_name }}
        git add reports/report.md
        git commit -m "ci: add compliance report [skip ci]" || echo "No changes to commit"
        git push origin HEAD:${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
